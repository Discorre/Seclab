package main

import (
	"fmt"
)

func checkMovement(N, M int, s string) string {
	x := 0 // начальная позиция по горизонтали
	y := 0 // начальная позиция по вертикали

	for _, move := range s { // Итерация по каждому символу в строке
		switch move { // Выбор действия в зависимости от символа
		case 'L': // Если символ - 'L'
			if x < N/2 && x > -(N/2) { // Проверка выхода за пределы доски
				x-- // Уменьшение координаты по горизонтали
			} else {
				return "No" // Возврат строки "No" при выходе за пределы доски
			}
		case 'R': // Если символ - 'R'
			if x < N/2 && x > -(N/2) { // Проверка выхода за пределы доски
				x++ // Увеличение координаты по горизонтали
			} else {
				return "No" // Возврат строки "No" при выходе за пределы доски
			}
		case 'U': // Если символ - 'U'
			if y < M/2 && y > -(M/2) { // Проверка выхода за пределы доски
				y++ // Увеличение координаты по вертикали
			} else {
				return "No" // Возврат строки "No" при выходе за пределы доски
			}
		case 'D': // Если символ - 'D'
			if y < M/2 && y > -(M/2) { // Проверка выхода за пределы доски
				y-- // Уменьшение координаты по вертикали
			} else {
				return "No" // Возврат строки "No" при выходе за пределы доски
			}
		default: // Если символ не 'L', 'R', 'U', или 'D'
			return "Invalid Command" // Возврат строки "Invalid Command" при некорректной команде
		}
	}

	return fmt.Sprintf("(%d,%d)", x, y) // Возврат строки с координатами в формате (x,y)
}

func main() {
	var N1, M1 int
	var s1 string

	// Пример использования функции
	fmt.Print("Введите N и M: ")
	fmt.Scan(&N1, &M1) // Считывание значений N и M
	fmt.Print("Введите последовательность ходов: ")
	fmt.Scan(&s1) // Считывание последовательности ходов

	fmt.Println(checkMovement(N1, M1, s1)) // Вывод результата проверки движения
}
