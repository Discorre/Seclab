function checkMovement(N, M, s) {
    let x = 0; // начальная позиция по горизонтали
    let y = 0; // начальная позиция по вертикали

    for (let i = 0; i < s.length; i++) { // Цикл по символам последовательности ходов
        const move = s[i]; // Текущий символ - направление движения
        switch (move) { // Оператор выбора для различных направлений движения
            case 'L': // Движение влево
                if (x < N / 2 && x > -(N / 2)) { // Проверка на выход за границы доски
                    x--; // Изменение позиции по горизонтали
                } else {
                    return 'No'; // выход за пределы доски
                }
                break;
            case 'R': // Движение вправо
                if (x < N / 2 && x > -(N / 2)) { // Проверка на выход за границы доски
                    x++; // Изменение позиции по горизонтали
                } else {
                    return 'No'; // выход за пределы доски
                }
                break;
            case 'U': // Движение вверх
                if (y < M / 2 && y > -(M / 2)) { // Проверка на выход за границы доски
                    y++; // Изменение позиции по вертикали
                } else {
                    return 'No'; // выход за пределы доски
                }
                break;
            case 'D': // Движение вниз
                if (y < M / 2 && y > -(M / 2)) { // Проверка на выход за границы доски
                    y--; // Изменение позиции по вертикали
                } else {
                    return 'No'; // выход за пределы доски
                }
                break;
            default:
                return 'Invalid Command'; // некорректная команда
        }
    }

    return `(${x},${y})`; // Возврат текущих координат
}

// Пример использования функции
const readline = require('readline'); // Импорт модуля readline для взаимодействия с консолью
const rl = readline.createInterface({ // Создание интерфейса для ввода-вывода
    input: process.stdin, // Ввод из стандартного потока ввода (консоль)
    output: process.stdout // Вывод в стандартный поток вывода (консоль)
});

rl.question("Введите N и M: ", function(input) { // Запрос ввода размеров доски
    const [N1, M1] = input.split(' ').map(Number); // Разделение введенной строки и преобразование в числа
    rl.question("Введите последовательность ходов: ", function(s1) { // Запрос ввода последовательности ходов
        console.log(checkMovement(N1, M1, s1)); // Вызов функции для проверки последовательности ходов
        rl.close(); // Закрытие интерфейса ввода-вывода
    });
});
